import { useMutation } from 'react-query'
import { getAxiosInstance } from '@axios/index'
import { useAppContext } from '@hooks/useAppContext'
import { {{properCase basePath}} } from '../{{properCase basePath}}Model'


export async function fetch{{properCase operationType}}{{properCase operationName}}(
  postData: any,
): Promise<{{properCase basePath}}> {
  const formData = new FormData();
  // TODO: set values to form
  // formData.append("key", postData.id );
  const { data } = await getAxiosInstance().{{camelCase operationType}}(
    `{{basePath}}`,
    
    formData,
     {headers: {
          "Content-Type": "multipart/form-data",
        },
    }
  )
  return data
}

export function use{{properCase operationType}}{{properCase operationName}}(
){
  const { appState } = useAppContext()
  const { mutate }  = useMutation({
    mutationFn: (patchData) =>
    fetch{{properCase operationType}}{{properCase operationName}} ( patchData ),
    onSuccess: () => {
      // success handler
    },
  })
  return mutate
}


// useHook const {{camelCase operationType}}{{properCase operationName}} = use{{properCase operationType}}{{properCase operationName}}()
// {{camelCase operationType}}{{properCase operationName}}.mutate( patchData )